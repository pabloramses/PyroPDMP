#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.225, 0.85),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=10))
#legend.key = element_rect(size=10))
dev.off()
#plot
png("figure_BNN.png", units="in", width=7, height=5, res=600)
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.225, 0.85),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=15))
#legend.key = element_rect(size=10))
dev.off()
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.25, 0.85),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=15))
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.75, 0.85),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=15))
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.25, 0.765),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=15))
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.25, 0.95),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=15))
#plot
png("figure_BNN.png", units="in", width=7, height=5, res=600)
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.25, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=15))
#legend.key = element_rect(size=10))
dev.off()
#plot
png("figure_BNN.png", units="in", width=7, height=5, res=600)
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.25, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=20))
#legend.key = element_rect(size=10))
dev.off()
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.25, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
#plot
png("figure_BNN.png", units="in", width=7, height=5, res=600)
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.25, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
#legend.key = element_rect(size=10))
dev.off()
#plot
png("figure_BNN.png", units="in", width=7, height=5, res=600)
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.275, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
#legend.key = element_rect(size=10))
dev.off()
#plot
png("figure_BNN.png", units="in", width=7, height=5, res=600)
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.27, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
#legend.key = element_rect(size=10))
dev.off()
#plot
png("figure_BNN.png", units="in", width=7, height=5, res=600)
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.265, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
#legend.key = element_rect(size=10))
dev.off()
setwd("~/OneDrive - University of Warwick/Dissertation/PDMP/Experiments/BNN_GaussianPrior/HP_1Layer_100u /results")
# plot by number of dimensions
library(ggplot2)
y_test = read.csv("y_test.csv")$X0
x_test = read.csv("x_test.csv")$X0
y_test_pred = read.csv("y_test_pred.csv")$X0
y_train = read.csv("y_train.csv")$X0
x_train = read.csv("x_train.csv")$X0
y_train_pred = read.csv("y_train_pred.csv")$X0
lower_test = read.csv("lower_test.csv")$X0
upper_test = read.csv("upper_test.csv")$X0
var_lower_test = read.csv("var_test_low.csv")$X0
var_upper_test = read.csv("var_test_up.csv")$X0
df = data.frame(x_test, y_test, y_test_pred, lower_test, upper_test, var_lower_test,var_upper_test, x_train, y_train)
y_ext = read.csv("y_ext.csv")$X0
x_ext = read.csv("x_ext.csv")$X0
y_ext_pred = read.csv("y_ext_pred.csv")$X0
lower_ext = read.csv("lower_ext.csv")$X0
upper_ext = read.csv("upper_ext.csv")$X0
png("figure_BNN.png", units="in", width=7, height=5, res=600)
ggplot(df, aes(x_test)) +
geom_ribbon(aes(ymin = lower_test, ymax = upper_test, color = "95% predictive CI"), fill = "grey70", linetype=0) +
geom_line(aes(y = y_test_pred, color = "Predictive MAP of test points")) +
geom_line(aes(y = y_test, color = "True values"), linetype="dashed") +
geom_point(aes(x = x_train, y = y_train, color="Train points")) +
xlab("x") +
ylab("") +
#scale_linetype_manual(values = c("Predictive MAP of test points" = "dashed","True values" = "dashed")) +
scale_color_manual(name="", values = c("Train points"="grey40", "Predictive MAP of test points" = "red","True values" = "black", "95% predictive CI"="grey"))+
guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
shape = c(16,NA,NA,NA),
size = 1)))+
theme(legend.position = c(0.265, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
#legend.key = element_rect(size=10))
dev.off()
png("figure_BNN_extended.png", units="in", width=7, height=5, res=600)
setwd("~/OneDrive - University of Warwick/Dissertation/PDMP/Experiments/BLR_HorseshoePrior/d50/results/d50_slar")
library(ggplot2)
hmc = read.csv("postSamp_hmc_d50_slar_run1.csv")
bk = read.csv("postSamp_bk_d50_slar_run1.csv")
library(ggplot2)
hmc = read.csv("postSamp_hmc_d50_slar_run1.csv")
bk = read.csv("postSamp_bk_d50_slar_run1.csv")
View(bk)
View(bk)
View(hmc)
View(hmc)
hmc = read.csv("postSamp_hmc_d50_slar_run1.csv")$X3
bk = read.csv("postSamp_bk_d50_slar_run1.csv")$X3
df = data.frame(bk, hmc)
ggplot(df, aes(hmc)) +
geom_density()
ggplot(df, aes(bk)) +
geom_density()
ggplot(df, aes(bk)) +
geom_density() +
geom_density(hmc)
ggplot(df, aes(bk)) +
geom_density() +
geom_density(aes(hmc))
ggplot(df, aes(bk)) +
geom_density()
ggplot(df, aes(bk)) +
geom_density(aes(hmc))
ggplot(df, aes(bk)) +
geom_density(aes(hmc), fill="blue")
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue")
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue") +
geom_density(aes(hmc), fill="red")
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue") +
geom_density(aes(hmc), fill="red") +
ylim(c(0,100))
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue") +
geom_density(aes(hmc), fill="red") +
ylim(c(0,25))
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue") +
geom_density(aes(hmc), fill="red") +
ylim(c(0,10))
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue") +
geom_density(aes(hmc), fill="red") +
ylim(c(0,15))
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue") +
geom_density(aes(hmc), fill="red") +
ylim(c(0,20))
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue") +
geom_density(aes(hmc), fill="red") +
ylim(c(0,25))
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue") +
ggplot(df, aes(hmc)) +
geom_density(aes(hmc), fill="red") +
xlim(c(2,3.2))
ggplot(df, aes(hmc)) +
geom_density(aes(hmc), fill="red") +
xlim(c(2,3.2))
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue")
ggplot(df, aes(hmc)) +
geom_density(aes(hmc), fill="red") +
xlim(c(2,3.2))
ggplot(df, aes(hmc)) +
geom_density(aes(hmc), fill="red") +
xlim(c(2,3.2)) +
xlab("")
hmc_c = read.csv("postSamp_hmc_d50_slar_run1.csv")
bk_c = read.csv("postSamp_bk_d50_slar_run1.csv")
View(hmc_c)
View(hmc_c)
View(bk_c)
hmc = read.csv("postSamp_hmc_d50_slar_run1.csv")$X14
bk = read.csv("postSamp_bk_d50_slar_run1.csv")$X14
df = data.frame(bk, hmc)
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue")
ggplot(df, aes(hmc)) +
geom_density(aes(hmc), fill="red") +
#xlim(c(2,3.2)) +
xlab("") +
ylab("")
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue")
ggplot(df, aes(hmc)) +
geom_density(aes(hmc), fill="red") +
xlim(c(1.2,2.2)) +
xlab("") +
ylab("")
ggplot(df, aes(bk)) +
geom_density(aes(bk), fill="blue")
ggplot(df, aes(hmc)) +
geom_density(aes(bk), fill="blue") +
geom_density(aes(hmc), fill="red") +
xlim(c(1.2,2.2)) +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 3))
ggplot(df, aes(hmc)) +
geom_density(aes(bk), fill="blue") +
geom_density(aes(hmc), fill="red") +
xlim(c(1.2,2.2)) +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 6))
ggplot(df, aes(hmc)) +
geom_density(aes(bk), fill="blue70") +
geom_density(aes(hmc), fill="red") +
xlim(c(1.2,2.2)) +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 6))
ggplot(df, aes(hmc)) +
geom_density(aes(bk), fill="deepbluesky") +
geom_density(aes(hmc), fill="red") +
xlim(c(1.2,2.2)) +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 6))
ggplot(df, aes(hmc)) +
geom_density(aes(bk), fill="deepskyblue") +
geom_density(aes(hmc), fill="red") +
xlim(c(1.2,2.2)) +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 6))
ggplot(df, aes(hmc)) +
geom_density(aes(bk), fill="deepskyblue") +
geom_density(aes(hmc), fill="red") +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 3))
geom_density(aes(bk), fill="Boomerang") +
ggplot(df, aes(hmc)) +
geom_density(aes(bk), fill="Boomerang") +
geom_density(aes(hmc), fill="HMC") +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 3)) +
scale_fill_manual(name="", values = c("Boomerang"="deepskyblue", "HMC" = "red"))+
#guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
#shape = c(16,NA,NA,NA),
#size = 1)))+
theme(legend.position = c(0.265, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
ggplot(df, aes(hmc)) +
geom_density(aes(bk), fill="Boomerang") +
geom_density(aes(hmc), fill="HMC") +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 3)) +
scale_fill_manual(name="", values = c("Boomerang"="deepskyblue", "HMC" = "red"))+
#guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
#shape = c(16,NA,NA,NA),
#size = 1)))
theme(legend.position = c(0.265, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
ggplot(df, aes(hmc)) +
geom_density(aes(bk), color="Boomerang") +
geom_density(aes(hmc), color="HMC") +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 3)) +
scale_fill_manual(name="", values = c("Boomerang"="deepskyblue", "HMC" = "red"))+
#guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
#shape = c(16,NA,NA,NA),
#size = 1)))
theme(legend.position = c(0.265, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
ggplot(df, aes(hmc)) +
geom_density(aes(bk, fill="Boomerang")) +
geom_density(aes(hmc, fill="HMC")) +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 3)) +
scale_fill_manual(name="", values = c("Boomerang"="deepskyblue", "HMC" = "red"))+
#guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
#shape = c(16,NA,NA,NA),
#size = 1)))
theme(legend.position = c(0.265, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
ggplot(df, aes(hmc)) +
geom_density(aes(bk, fill="Boomerang")) +
geom_density(aes(hmc, fill="HMC")) +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 3)) +
scale_fill_manual(name="", values = c("Boomerang"="deepskyblue", "HMC" = "red"))+
#guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
#shape = c(16,NA,NA,NA),
#size = 1)))
theme(legend.position = c(0.165, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
ggplot(df, aes(hmc)) +
geom_density(aes(bk, fill="Boomerang")) +
geom_density(aes(hmc, fill="NUTS")) +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 3)) +
scale_fill_manual(name="", values = c("Boomerang"="deepskyblue", "NUTS" = "red"))+
#guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
#shape = c(16,NA,NA,NA),
#size = 1)))
theme(legend.position = c(0.165, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
png("densities.png", units="in", width=7, height=5, res=600)
ggplot(df, aes(hmc)) +
geom_density(aes(bk, fill="Boomerang")) +
geom_density(aes(hmc, fill="NUTS")) +
xlab("") +
ylab("") +
coord_cartesian(ylim=c(0, 3)) +
scale_fill_manual(name="", values = c("Boomerang"="deepskyblue", "NUTS" = "red"))+
#guides(color = guide_legend(override.aes = list(linetype = c(0, 1, 2, 0),
#shape = c(16,NA,NA,NA),
#size = 1)))
theme(legend.position = c(0.165, 0.9),
legend.background = element_rect(fill = "white"),
legend.title = element_text(size=3),
legend.text = element_text(size=17))
dev.off()
